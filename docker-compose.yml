version: "3"
services:
    webserver:
        build: . # Utiliza el Dockerfile incluido en este mismo directorio.
        restart: unless-stopped # No se reiniciar치 cuando ejecutemos el comando docker stop.
        ports: 
            - "8080:80" # EL puerto interno (del container) 80 ser치 accesible en el puerto 8080 del host.
        volumes:
            - ./src:/var/www/html/ # El container sincronizar치 la carpeta src del host con /var/www/html/ del container.
        depends_on:
            - database # Primero deber치 arrancar el container database
        networks:
            - default
    database:
        image: mysql:8.0.31
        ports: 
            - "3306:3306"
        restart: unless-stopped
        environment: # Pasamos al container variables de entorno:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        links: # Ya no es necesario, desde la v2 pueden comunicarse con otros containers utilizando su nombre.
            - database:database
        ports:
            - 8000:80
        environment:
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
volumes:
    persistent:
